// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: platform.proto

package ecoflow2db

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlCmdSets int32

const (
	PlCmdSets_PL_NONE_CMD_SETS  PlCmdSets = 0
	PlCmdSets_PL_BASIC_CMD_SETS PlCmdSets = 1
	PlCmdSets_PL_EXT_CMD_SETS   PlCmdSets = 254
)

// Enum value maps for PlCmdSets.
var (
	PlCmdSets_name = map[int32]string{
		0:   "PL_NONE_CMD_SETS",
		1:   "PL_BASIC_CMD_SETS",
		254: "PL_EXT_CMD_SETS",
	}
	PlCmdSets_value = map[string]int32{
		"PL_NONE_CMD_SETS":  0,
		"PL_BASIC_CMD_SETS": 1,
		"PL_EXT_CMD_SETS":   254,
	}
)

func (x PlCmdSets) Enum() *PlCmdSets {
	p := new(PlCmdSets)
	*p = x
	return p
}

func (x PlCmdSets) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlCmdSets) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[0].Descriptor()
}

func (PlCmdSets) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[0]
}

func (x PlCmdSets) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlCmdSets.Descriptor instead.
func (PlCmdSets) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

type PlCmdId int32

const (
	PlCmdId_PL_CMD_ID_NONE  PlCmdId = 0
	PlCmdId_PL_CMD_ID_XLOG  PlCmdId = 16
	PlCmdId_PL_CMD_ID_WATTH PlCmdId = 32
)

// Enum value maps for PlCmdId.
var (
	PlCmdId_name = map[int32]string{
		0:  "PL_CMD_ID_NONE",
		16: "PL_CMD_ID_XLOG",
		32: "PL_CMD_ID_WATTH",
	}
	PlCmdId_value = map[string]int32{
		"PL_CMD_ID_NONE":  0,
		"PL_CMD_ID_XLOG":  16,
		"PL_CMD_ID_WATTH": 32,
	}
)

func (x PlCmdId) Enum() *PlCmdId {
	p := new(PlCmdId)
	*p = x
	return p
}

func (x PlCmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlCmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[1].Descriptor()
}

func (PlCmdId) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[1]
}

func (x PlCmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlCmdId.Descriptor instead.
func (PlCmdId) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{1}
}

type EnergyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *uint32                `protobuf:"varint,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	WatthType     *uint32                `protobuf:"varint,2,opt,name=watth_type,json=watthType,proto3,oneof" json:"watth_type,omitempty"`
	Watth         []uint32               `protobuf:"varint,3,rep,packed,name=watth,proto3" json:"watth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnergyItem) Reset() {
	*x = EnergyItem{}
	mi := &file_platform_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnergyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyItem) ProtoMessage() {}

func (x *EnergyItem) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyItem.ProtoReflect.Descriptor instead.
func (*EnergyItem) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

func (x *EnergyItem) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *EnergyItem) GetWatthType() uint32 {
	if x != nil && x.WatthType != nil {
		return *x.WatthType
	}
	return 0
}

func (x *EnergyItem) GetWatth() []uint32 {
	if x != nil {
		return x.Watth
	}
	return nil
}

type EnergyTotalReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WatthSeq      *uint32                `protobuf:"varint,1,opt,name=watth_seq,json=watthSeq,proto3,oneof" json:"watth_seq,omitempty"`
	WatthItem     *EnergyItem            `protobuf:"bytes,2,opt,name=watth_item,json=watthItem,proto3,oneof" json:"watth_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnergyTotalReport) Reset() {
	*x = EnergyTotalReport{}
	mi := &file_platform_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnergyTotalReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyTotalReport) ProtoMessage() {}

func (x *EnergyTotalReport) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyTotalReport.ProtoReflect.Descriptor instead.
func (*EnergyTotalReport) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{1}
}

func (x *EnergyTotalReport) GetWatthSeq() uint32 {
	if x != nil && x.WatthSeq != nil {
		return *x.WatthSeq
	}
	return 0
}

func (x *EnergyTotalReport) GetWatthItem() *EnergyItem {
	if x != nil {
		return x.WatthItem
	}
	return nil
}

type BatchEnergyTotalReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WatthSeq      *uint32                `protobuf:"varint,1,opt,name=watth_seq,json=watthSeq,proto3,oneof" json:"watth_seq,omitempty"`
	WatthItem     []*EnergyItem          `protobuf:"bytes,2,rep,name=watth_item,json=watthItem,proto3" json:"watth_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchEnergyTotalReport) Reset() {
	*x = BatchEnergyTotalReport{}
	mi := &file_platform_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchEnergyTotalReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEnergyTotalReport) ProtoMessage() {}

func (x *BatchEnergyTotalReport) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEnergyTotalReport.ProtoReflect.Descriptor instead.
func (*BatchEnergyTotalReport) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{2}
}

func (x *BatchEnergyTotalReport) GetWatthSeq() uint32 {
	if x != nil && x.WatthSeq != nil {
		return *x.WatthSeq
	}
	return 0
}

func (x *BatchEnergyTotalReport) GetWatthItem() []*EnergyItem {
	if x != nil {
		return x.WatthItem
	}
	return nil
}

type EnergyTotalReportAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	WatthSeq      *uint32                `protobuf:"varint,2,opt,name=watth_seq,json=watthSeq,proto3,oneof" json:"watth_seq,omitempty"`
	WatthType     *uint32                `protobuf:"varint,3,opt,name=watth_type,json=watthType,proto3,oneof" json:"watth_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnergyTotalReportAck) Reset() {
	*x = EnergyTotalReportAck{}
	mi := &file_platform_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnergyTotalReportAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyTotalReportAck) ProtoMessage() {}

func (x *EnergyTotalReportAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyTotalReportAck.ProtoReflect.Descriptor instead.
func (*EnergyTotalReportAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{3}
}

func (x *EnergyTotalReportAck) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *EnergyTotalReportAck) GetWatthSeq() uint32 {
	if x != nil && x.WatthSeq != nil {
		return *x.WatthSeq
	}
	return 0
}

func (x *EnergyTotalReportAck) GetWatthType() uint32 {
	if x != nil && x.WatthType != nil {
		return *x.WatthType
	}
	return 0
}

type EventRecordItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *uint32                `protobuf:"varint,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	SysMs         *uint32                `protobuf:"varint,2,opt,name=sys_ms,json=sysMs,proto3,oneof" json:"sys_ms,omitempty"`
	EventNo       *uint32                `protobuf:"varint,3,opt,name=event_no,json=eventNo,proto3,oneof" json:"event_no,omitempty"`
	EventDetail   []float32              `protobuf:"fixed32,4,rep,packed,name=event_detail,json=eventDetail,proto3" json:"event_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRecordItem) Reset() {
	*x = EventRecordItem{}
	mi := &file_platform_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRecordItem) ProtoMessage() {}

func (x *EventRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRecordItem.ProtoReflect.Descriptor instead.
func (*EventRecordItem) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{4}
}

func (x *EventRecordItem) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *EventRecordItem) GetSysMs() uint32 {
	if x != nil && x.SysMs != nil {
		return *x.SysMs
	}
	return 0
}

func (x *EventRecordItem) GetEventNo() uint32 {
	if x != nil && x.EventNo != nil {
		return *x.EventNo
	}
	return 0
}

func (x *EventRecordItem) GetEventDetail() []float32 {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

type EventRecordReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventVer      *uint32                `protobuf:"varint,1,opt,name=event_ver,json=eventVer,proto3,oneof" json:"event_ver,omitempty"`
	EventSeq      *uint32                `protobuf:"varint,2,opt,name=event_seq,json=eventSeq,proto3,oneof" json:"event_seq,omitempty"`
	EventItem     []*EventRecordItem     `protobuf:"bytes,3,rep,name=event_item,json=eventItem,proto3" json:"event_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRecordReport) Reset() {
	*x = EventRecordReport{}
	mi := &file_platform_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRecordReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRecordReport) ProtoMessage() {}

func (x *EventRecordReport) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRecordReport.ProtoReflect.Descriptor instead.
func (*EventRecordReport) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{5}
}

func (x *EventRecordReport) GetEventVer() uint32 {
	if x != nil && x.EventVer != nil {
		return *x.EventVer
	}
	return 0
}

func (x *EventRecordReport) GetEventSeq() uint32 {
	if x != nil && x.EventSeq != nil {
		return *x.EventSeq
	}
	return 0
}

func (x *EventRecordReport) GetEventItem() []*EventRecordItem {
	if x != nil {
		return x.EventItem
	}
	return nil
}

type EventInfoReportAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	EventSeq      *uint32                `protobuf:"varint,2,opt,name=event_seq,json=eventSeq,proto3,oneof" json:"event_seq,omitempty"`
	EventItemNum  *uint32                `protobuf:"varint,3,opt,name=event_item_num,json=eventItemNum,proto3,oneof" json:"event_item_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInfoReportAck) Reset() {
	*x = EventInfoReportAck{}
	mi := &file_platform_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInfoReportAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfoReportAck) ProtoMessage() {}

func (x *EventInfoReportAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInfoReportAck.ProtoReflect.Descriptor instead.
func (*EventInfoReportAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{6}
}

func (x *EventInfoReportAck) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *EventInfoReportAck) GetEventSeq() uint32 {
	if x != nil && x.EventSeq != nil {
		return *x.EventSeq
	}
	return 0
}

func (x *EventInfoReportAck) GetEventItemNum() uint32 {
	if x != nil && x.EventItemNum != nil {
		return *x.EventItemNum
	}
	return 0
}

type ProductNameSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductNameSet) Reset() {
	*x = ProductNameSet{}
	mi := &file_platform_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductNameSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductNameSet) ProtoMessage() {}

func (x *ProductNameSet) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductNameSet.ProtoReflect.Descriptor instead.
func (*ProductNameSet) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{7}
}

func (x *ProductNameSet) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ProductNameSetAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductNameSetAck) Reset() {
	*x = ProductNameSetAck{}
	mi := &file_platform_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductNameSetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductNameSetAck) ProtoMessage() {}

func (x *ProductNameSetAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductNameSetAck.ProtoReflect.Descriptor instead.
func (*ProductNameSetAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{8}
}

func (x *ProductNameSetAck) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type ProductNameGet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductNameGet) Reset() {
	*x = ProductNameGet{}
	mi := &file_platform_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductNameGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductNameGet) ProtoMessage() {}

func (x *ProductNameGet) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductNameGet.ProtoReflect.Descriptor instead.
func (*ProductNameGet) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{9}
}

type ProductNameGetAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductNameGetAck) Reset() {
	*x = ProductNameGetAck{}
	mi := &file_platform_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductNameGetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductNameGetAck) ProtoMessage() {}

func (x *ProductNameGetAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductNameGetAck.ProtoReflect.Descriptor instead.
func (*ProductNameGetAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{10}
}

func (x *ProductNameGetAck) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type RTCTimeGet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RTCTimeGet) Reset() {
	*x = RTCTimeGet{}
	mi := &file_platform_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RTCTimeGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTCTimeGet) ProtoMessage() {}

func (x *RTCTimeGet) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTCTimeGet.ProtoReflect.Descriptor instead.
func (*RTCTimeGet) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{11}
}

type RTCTimeGetAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *uint32                `protobuf:"varint,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	Timezone      *int32                 `protobuf:"varint,2,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RTCTimeGetAck) Reset() {
	*x = RTCTimeGetAck{}
	mi := &file_platform_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RTCTimeGetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTCTimeGetAck) ProtoMessage() {}

func (x *RTCTimeGetAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTCTimeGetAck.ProtoReflect.Descriptor instead.
func (*RTCTimeGetAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{12}
}

func (x *RTCTimeGetAck) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *RTCTimeGetAck) GetTimezone() int32 {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return 0
}

type RTCTimeSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *uint32                `protobuf:"varint,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	Timezone      *int32                 `protobuf:"varint,2,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RTCTimeSet) Reset() {
	*x = RTCTimeSet{}
	mi := &file_platform_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RTCTimeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTCTimeSet) ProtoMessage() {}

func (x *RTCTimeSet) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTCTimeSet.ProtoReflect.Descriptor instead.
func (*RTCTimeSet) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{13}
}

func (x *RTCTimeSet) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *RTCTimeSet) GetTimezone() int32 {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return 0
}

type RTCTimeSetAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RTCTimeSetAck) Reset() {
	*x = RTCTimeSetAck{}
	mi := &file_platform_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RTCTimeSetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTCTimeSetAck) ProtoMessage() {}

func (x *RTCTimeSetAck) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTCTimeSetAck.ProtoReflect.Descriptor instead.
func (*RTCTimeSetAck) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{14}
}

func (x *RTCTimeSetAck) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CountryTownMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Country       *uint32                `protobuf:"varint,1,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Town          *uint32                `protobuf:"varint,2,opt,name=town,proto3,oneof" json:"town,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryTownMessage) Reset() {
	*x = CountryTownMessage{}
	mi := &file_platform_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryTownMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryTownMessage) ProtoMessage() {}

func (x *CountryTownMessage) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryTownMessage.ProtoReflect.Descriptor instead.
func (*CountryTownMessage) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{15}
}

func (x *CountryTownMessage) GetCountry() uint32 {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return 0
}

func (x *CountryTownMessage) GetTown() uint32 {
	if x != nil && x.Town != nil {
		return *x.Town
	}
	return 0
}

var File_platform_proto protoreflect.FileDescriptor

const file_platform_proto_rawDesc = "" +
	"\n" +
	"\x0eplatform.proto\"\x86\x01\n" +
	"\n" +
	"EnergyItem\x12!\n" +
	"\ttimestamp\x18\x01 \x01(\rH\x00R\ttimestamp\x88\x01\x01\x12\"\n" +
	"\n" +
	"watth_type\x18\x02 \x01(\rH\x01R\twatthType\x88\x01\x01\x12\x14\n" +
	"\x05watth\x18\x03 \x03(\rR\x05watthB\f\n" +
	"\n" +
	"_timestampB\r\n" +
	"\v_watth_type\"\x83\x01\n" +
	"\x11EnergyTotalReport\x12 \n" +
	"\twatth_seq\x18\x01 \x01(\rH\x00R\bwatthSeq\x88\x01\x01\x12/\n" +
	"\n" +
	"watth_item\x18\x02 \x01(\v2\v.EnergyItemH\x01R\twatthItem\x88\x01\x01B\f\n" +
	"\n" +
	"_watth_seqB\r\n" +
	"\v_watth_item\"t\n" +
	"\x16BatchEnergyTotalReport\x12 \n" +
	"\twatth_seq\x18\x01 \x01(\rH\x00R\bwatthSeq\x88\x01\x01\x12*\n" +
	"\n" +
	"watth_item\x18\x02 \x03(\v2\v.EnergyItemR\twatthItemB\f\n" +
	"\n" +
	"_watth_seq\"\xa1\x01\n" +
	"\x14EnergyTotalReportAck\x12\x1b\n" +
	"\x06result\x18\x01 \x01(\rH\x00R\x06result\x88\x01\x01\x12 \n" +
	"\twatth_seq\x18\x02 \x01(\rH\x01R\bwatthSeq\x88\x01\x01\x12\"\n" +
	"\n" +
	"watth_type\x18\x03 \x01(\rH\x02R\twatthType\x88\x01\x01B\t\n" +
	"\a_resultB\f\n" +
	"\n" +
	"_watth_seqB\r\n" +
	"\v_watth_type\"\xb9\x01\n" +
	"\x0fEventRecordItem\x12!\n" +
	"\ttimestamp\x18\x01 \x01(\rH\x00R\ttimestamp\x88\x01\x01\x12\x1a\n" +
	"\x06sys_ms\x18\x02 \x01(\rH\x01R\x05sysMs\x88\x01\x01\x12\x1e\n" +
	"\bevent_no\x18\x03 \x01(\rH\x02R\aeventNo\x88\x01\x01\x12!\n" +
	"\fevent_detail\x18\x04 \x03(\x02R\veventDetailB\f\n" +
	"\n" +
	"_timestampB\t\n" +
	"\a_sys_msB\v\n" +
	"\t_event_no\"\xa4\x01\n" +
	"\x11EventRecordReport\x12 \n" +
	"\tevent_ver\x18\x01 \x01(\rH\x00R\beventVer\x88\x01\x01\x12 \n" +
	"\tevent_seq\x18\x02 \x01(\rH\x01R\beventSeq\x88\x01\x01\x12/\n" +
	"\n" +
	"event_item\x18\x03 \x03(\v2\x10.EventRecordItemR\teventItemB\f\n" +
	"\n" +
	"_event_verB\f\n" +
	"\n" +
	"_event_seq\"\xaa\x01\n" +
	"\x12EventInfoReportAck\x12\x1b\n" +
	"\x06result\x18\x01 \x01(\rH\x00R\x06result\x88\x01\x01\x12 \n" +
	"\tevent_seq\x18\x02 \x01(\rH\x01R\beventSeq\x88\x01\x01\x12)\n" +
	"\x0eevent_item_num\x18\x03 \x01(\rH\x02R\feventItemNum\x88\x01\x01B\t\n" +
	"\a_resultB\f\n" +
	"\n" +
	"_event_seqB\x11\n" +
	"\x0f_event_item_num\"2\n" +
	"\x0eProductNameSet\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\";\n" +
	"\x11ProductNameSetAck\x12\x1b\n" +
	"\x06result\x18\x01 \x01(\rH\x00R\x06result\x88\x01\x01B\t\n" +
	"\a_result\"\x10\n" +
	"\x0eProductNameGet\"5\n" +
	"\x11ProductNameGetAck\x12\x17\n" +
	"\x04name\x18\x03 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"\f\n" +
	"\n" +
	"RTCTimeGet\"n\n" +
	"\rRTCTimeGetAck\x12!\n" +
	"\ttimestamp\x18\x01 \x01(\rH\x00R\ttimestamp\x88\x01\x01\x12\x1f\n" +
	"\btimezone\x18\x02 \x01(\x05H\x01R\btimezone\x88\x01\x01B\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_timezone\"k\n" +
	"\n" +
	"RTCTimeSet\x12!\n" +
	"\ttimestamp\x18\x01 \x01(\rH\x00R\ttimestamp\x88\x01\x01\x12\x1f\n" +
	"\btimezone\x18\x02 \x01(\x05H\x01R\btimezone\x88\x01\x01B\f\n" +
	"\n" +
	"_timestampB\v\n" +
	"\t_timezone\"7\n" +
	"\rRTCTimeSetAck\x12\x1b\n" +
	"\x06result\x18\x01 \x01(\rH\x00R\x06result\x88\x01\x01B\t\n" +
	"\a_result\"c\n" +
	"\x14country_town_message\x12\x1d\n" +
	"\acountry\x18\x01 \x01(\rH\x00R\acountry\x88\x01\x01\x12\x17\n" +
	"\x04town\x18\x02 \x01(\rH\x01R\x04town\x88\x01\x01B\n" +
	"\n" +
	"\b_countryB\a\n" +
	"\x05_town*N\n" +
	"\tPlCmdSets\x12\x14\n" +
	"\x10PL_NONE_CMD_SETS\x10\x00\x12\x15\n" +
	"\x11PL_BASIC_CMD_SETS\x10\x01\x12\x14\n" +
	"\x0fPL_EXT_CMD_SETS\x10\xfe\x01*F\n" +
	"\aPlCmdId\x12\x12\n" +
	"\x0ePL_CMD_ID_NONE\x10\x00\x12\x12\n" +
	"\x0ePL_CMD_ID_XLOG\x10\x10\x12\x13\n" +
	"\x0fPL_CMD_ID_WATTH\x10 b\x06proto3"

var (
	file_platform_proto_rawDescOnce sync.Once
	file_platform_proto_rawDescData []byte
)

func file_platform_proto_rawDescGZIP() []byte {
	file_platform_proto_rawDescOnce.Do(func() {
		file_platform_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_proto_rawDesc), len(file_platform_proto_rawDesc)))
	})
	return file_platform_proto_rawDescData
}

var file_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_platform_proto_goTypes = []any{
	(PlCmdSets)(0),                 // 0: PlCmdSets
	(PlCmdId)(0),                   // 1: PlCmdId
	(*EnergyItem)(nil),             // 2: EnergyItem
	(*EnergyTotalReport)(nil),      // 3: EnergyTotalReport
	(*BatchEnergyTotalReport)(nil), // 4: BatchEnergyTotalReport
	(*EnergyTotalReportAck)(nil),   // 5: EnergyTotalReportAck
	(*EventRecordItem)(nil),        // 6: EventRecordItem
	(*EventRecordReport)(nil),      // 7: EventRecordReport
	(*EventInfoReportAck)(nil),     // 8: EventInfoReportAck
	(*ProductNameSet)(nil),         // 9: ProductNameSet
	(*ProductNameSetAck)(nil),      // 10: ProductNameSetAck
	(*ProductNameGet)(nil),         // 11: ProductNameGet
	(*ProductNameGetAck)(nil),      // 12: ProductNameGetAck
	(*RTCTimeGet)(nil),             // 13: RTCTimeGet
	(*RTCTimeGetAck)(nil),          // 14: RTCTimeGetAck
	(*RTCTimeSet)(nil),             // 15: RTCTimeSet
	(*RTCTimeSetAck)(nil),          // 16: RTCTimeSetAck
	(*CountryTownMessage)(nil),     // 17: country_town_message
}
var file_platform_proto_depIdxs = []int32{
	2, // 0: EnergyTotalReport.watth_item:type_name -> EnergyItem
	2, // 1: BatchEnergyTotalReport.watth_item:type_name -> EnergyItem
	6, // 2: EventRecordReport.event_item:type_name -> EventRecordItem
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_platform_proto_init() }
func file_platform_proto_init() {
	if File_platform_proto != nil {
		return
	}
	file_platform_proto_msgTypes[0].OneofWrappers = []any{}
	file_platform_proto_msgTypes[1].OneofWrappers = []any{}
	file_platform_proto_msgTypes[2].OneofWrappers = []any{}
	file_platform_proto_msgTypes[3].OneofWrappers = []any{}
	file_platform_proto_msgTypes[4].OneofWrappers = []any{}
	file_platform_proto_msgTypes[5].OneofWrappers = []any{}
	file_platform_proto_msgTypes[6].OneofWrappers = []any{}
	file_platform_proto_msgTypes[7].OneofWrappers = []any{}
	file_platform_proto_msgTypes[8].OneofWrappers = []any{}
	file_platform_proto_msgTypes[10].OneofWrappers = []any{}
	file_platform_proto_msgTypes[12].OneofWrappers = []any{}
	file_platform_proto_msgTypes[13].OneofWrappers = []any{}
	file_platform_proto_msgTypes[14].OneofWrappers = []any{}
	file_platform_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_proto_rawDesc), len(file_platform_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_proto_goTypes,
		DependencyIndexes: file_platform_proto_depIdxs,
		EnumInfos:         file_platform_proto_enumTypes,
		MessageInfos:      file_platform_proto_msgTypes,
	}.Build()
	File_platform_proto = out.File
	file_platform_proto_goTypes = nil
	file_platform_proto_depIdxs = nil
}
